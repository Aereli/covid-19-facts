{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\n\nvar useStats = function useStats() {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"fetching data\");\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              }));\n\n            case 3:\n              data = _context.sent;\n              setStats(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return stats;\n};\n\nexport default useStats;","map":{"version":3,"sources":["/Users/Aereli/Documents/Programs/covid-19/utils/useStats.js"],"names":["useState","useEffect","useStats","stats","setStats","fetchData","console","log","fetch","url","then","res","json","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACKF,QAAQ,EADb;AAAA,MACdG,KADc;AAAA,MACPC,QADO;;AAErBH,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AADF;AAAA,+CAEqBC,KAAK,CAACC,GAAD,CAAL,CAAWC,IAAX,CAAgB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAAnB,CAFrB;;AAAA;AAEQC,cAAAA,IAFR;AAGET,cAAAA,QAAQ,CAACS,IAAD,CAAR;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAR,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;AAQA,SAAOF,KAAP;AACD,CAXD;;AAaA,eAAeD,QAAf","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst useStats = () => {\n  const [stats, setStats] = useState()\n  useEffect(() => {\n    async function fetchData() {\n      console.log(\"fetching data\")\n      const data = await fetch(url).then(res => res.json())\n      setStats(data)\n    }\n    fetchData()\n  }, [])\n  return stats\n}\n\nexport default useStats\n"]},"metadata":{},"sourceType":"module"}
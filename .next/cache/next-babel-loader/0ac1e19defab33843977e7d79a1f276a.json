{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst useStats = url => {\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(ture);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      console.log(\"fetching data\");\n      const data = await fetch(url).then(res => res.json()).catch(error => {\n        setError(error);\n      });\n      setStats(data);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats,\n    loading,\n    error\n  };\n};\n\nexport default useStats;","map":{"version":3,"sources":["/Users/Aereli/Documents/Programs/covid-19/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","ture","error","setError","fetchData","console","log","data","fetch","then","res","json","catch"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAGC,GAAG,IAAI;AACtB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAACQ,IAAD,CAAtC;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,EAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,SAAf,GAA2B;AACzBJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAACZ,GAAD,CAAL,CAChBa,IADgB,CACXC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADI,EAEhBC,KAFgB,CAEVV,KAAK,IAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAJgB,CAAnB;AAKAJ,MAAAA,QAAQ,CAACS,IAAD,CAAR;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDI,IAAAA,SAAS;AACV,GAdQ,EAcN,CAACR,GAAD,CAdM,CAAT;AAeA,SAAO;AAAEC,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBG,IAAAA;AAAlB,GAAP;AACD,CApBD;;AAsBA,eAAeP,QAAf","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst useStats = url => {\n  const [stats, setStats] = useState()\n  const [loading, setLoading] = useState(ture)\n  const [error, setError] = useState()\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true)\n      console.log(\"fetching data\")\n\n      const data = await fetch(url)\n        .then(res => res.json())\n        .catch(error => {\n          setError(error)\n        })\n      setStats(data)\n      setLoading(false)\n    }\n    fetchData()\n  }, [url])\n  return { stats, loading, error }\n}\n\nexport default useStats\n"]},"metadata":{},"sourceType":"module"}